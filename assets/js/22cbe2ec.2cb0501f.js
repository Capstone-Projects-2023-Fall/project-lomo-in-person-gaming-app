"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8672],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var s=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),c=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?s.createElement(f,o(o({ref:t},u),{},{components:n})):s.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53751:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=n(87462),r=(n(67294),n(3905));const a={sidebar_position:2},o="Backend Unit Tests",i={unversionedId:"testing/backend-unit-testing",id:"testing/backend-unit-testing",title:"Backend Unit Tests",description:"Laravel has a built-in test suite wrapper that uses the PHPUnit testing framework to create and run all tests.",source:"@site/docs/testing/backend-unit-testing.md",sourceDirName:"testing",slug:"/testing/backend-unit-testing",permalink:"/project-lomo-in-person-gaming-app/docs/testing/backend-unit-testing",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-lomo-in-person-gaming-app/edit/main/documentation/docs/testing/backend-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"tuk04480",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Frontend Unit Tests",permalink:"/project-lomo-in-person-gaming-app/docs/testing/frontend-unit-testing"},next:{title:"Integration tests",permalink:"/project-lomo-in-person-gaming-app/docs/testing/integration-testing"}},l={},c=[{value:"Test Coverage",id:"test-coverage",level:2},{value:"Tests",id:"tests",level:2},{value:"BeaconControllerTest",id:"beaconcontrollertest",level:3},{value:"Test: POST request to api/beacons is successful",id:"test-post-request-to-apibeacons-is-successful",level:4},{value:"Test: POST request to api/beacons fails when required fields are empty",id:"test-post-request-to-apibeacons-fails-when-required-fields-are-empty",level:4},{value:"Test: GET request to api/beacons is successful",id:"test-get-request-to-apibeacons-is-successful",level:4},{value:"Test: BeaconCreated Event is dispatched successfully",id:"test-beaconcreated-event-is-dispatched-successfully",level:4},{value:"UserControllerTest",id:"usercontrollertest",level:3},{value:"Test: GET request to api/users is successful",id:"test-get-request-to-apiusers-is-successful",level:4},{value:"DatabaseConnectionTest",id:"databaseconnectiontest",level:3},{value:"Test: Database connection to the testing database",id:"test-database-connection-to-the-testing-database",level:4},{value:"Test: Database connection to the production database",id:"test-database-connection-to-the-production-database",level:4}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backend-unit-tests"},"Backend Unit Tests"),(0,r.kt)("p",null,"Laravel has a built-in test suite wrapper that uses the ",(0,r.kt)("a",{parentName:"p",href:"https://phpunit.de/"},"PHPUnit testing framework")," to create and run all tests."),(0,r.kt)("p",null,"The unit tests are grouped together under Feature tests. Each feature test corresponds to a ",(0,r.kt)("a",{parentName:"p",href:"/docs/requirements/use-case-descriptions"},"use case"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The Laravel Sail docker container must be running for the commands to work. For more testing commands, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://laravel.com/docs/10.x/testing"},"Larvel 10 testing documentation"),". Remember to use the ",(0,r.kt)("a",{parentName:"p",href:"https://laravel.com/docs/10.x/sail#executing-sail-commands"},"sail")," or ",(0,r.kt)("a",{parentName:"p",href:"/resources/docker-quick-start#access-the-docker-containers-command-line"},"docker")," command to execute any Laravel commands.")),(0,r.kt)("h2",{id:"test-coverage"},"Test Coverage"),(0,r.kt)("p",null,"Results printed from the ",(0,r.kt)("inlineCode",{parentName:"p"},"sail artisan test --coverage")," command. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Console/Kernel ............................... 16 / 66.7%  \n  Exceptions/Handler ............................... 100.0%  \n  Http/Controllers/BeaconController .... 16, 43..59 / 55.6%  \n  Http/Controllers/Controller ...................... 100.0%  \n  Http/Controllers/PostController .................... 0.0%  \n  Http/Controllers/UserController .................... 0.0%  \n  Http/Kernel ...................................... 100.0%  \n  Http/Middleware/Authenticate ....................... 0.0%  \n  Http/Middleware/EncryptCookies ................... 100.0%  \n  Http/Middleware/PreventRequestsDuringMaintenance . 100.0%  \n  Http/Middleware/RedirectIfAuthenticated ............ 0.0%  \n  Http/Middleware/TrimStrings ...................... 100.0%  \n  Http/Middleware/TrustHosts ......................... 0.0%  \n  Http/Middleware/TrustProxies ..................... 100.0%  \n  Http/Middleware/ValidateSignature ................ 100.0%  \n  Http/Middleware/VerifyCsrfToken .................. 100.0%  \n  Models/Beacon .................................... 100.0%  \n  Models/Post ...................................... 100.0%  \n  Models/User ...................................... 100.0%  \n  Providers/AppServiceProvider ..................... 100.0%  \n  Providers/AuthServiceProvider .................... 100.0%  \n  Providers/BroadcastServiceProvider ................. 0.0%  \n  Providers/EventServiceProvider ................... 100.0%  \n  Providers/RouteServiceProvider ................... 100.0%  \n  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n                                              Total: 41.4 %  \n")),(0,r.kt)("h2",{id:"tests"},"Tests"),(0,r.kt)("h3",{id:"beaconcontrollertest"},"BeaconControllerTest"),(0,r.kt)("h4",{id:"test-post-request-to-apibeacons-is-successful"},"Test: POST request to api/beacons is successful"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_post_beacon_request_returns_successful_response()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: HTTP status code 201 for successful resource creation")),(0,r.kt)("h4",{id:"test-post-request-to-apibeacons-fails-when-required-fields-are-empty"},"Test: POST request to api/beacons fails when required fields are empty"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_post_beacon_request_fails_when_required_fields_are_empty()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: HTTP status code 422 for unprocessable entity")),(0,r.kt)("h4",{id:"test-get-request-to-apibeacons-is-successful"},"Test: GET request to api/beacons is successful"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_get_all_beacons()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: HTTP status code 200 for successful response")),(0,r.kt)("h4",{id:"test-beaconcreated-event-is-dispatched-successfully"},"Test: BeaconCreated Event is dispatched successfully"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_beacon_created_event_dispatched()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: Dispatched is true")),(0,r.kt)("h3",{id:"usercontrollertest"},"UserControllerTest"),(0,r.kt)("h4",{id:"test-get-request-to-apiusers-is-successful"},"Test: GET request to api/users is successful"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_get_all_users()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: HTTP status code 200 for successful response")),(0,r.kt)("h3",{id:"databaseconnectiontest"},"DatabaseConnectionTest"),(0,r.kt)("h4",{id:"test-database-connection-to-the-testing-database"},"Test: Database connection to the testing database"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_database_connection_to_testing_schema()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: Connection established")),(0,r.kt)("h4",{id:"test-database-connection-to-the-production-database"},"Test: Database connection to the production database"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_database_connection_to_public_schema()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assert: Connection established")))}p.isMDXComponent=!0}}]);