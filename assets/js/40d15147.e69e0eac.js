"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2383],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},44008:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:2,description:"Documentation for Laravel classes"},i="Backend Class Documentation",s={unversionedId:"api-specification/backend-class-docs",id:"api-specification/backend-class-docs",title:"Backend Class Documentation",description:"Documentation for Laravel classes",source:"@site/docs/api-specification/backend-class-docs.md",sourceDirName:"api-specification",slug:"/api-specification/backend-class-docs",permalink:"/project-lomo-in-person-gaming-app/docs/api-specification/backend-class-docs",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-lomo-in-person-gaming-app/edit/main/documentation/docs/api-specification/backend-class-docs.md",tags:[],version:"current",lastUpdatedBy:"tuk04480",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Documentation for Laravel classes"},sidebar:"docsSidebar",previous:{title:"Frontend Class Documentation",permalink:"/project-lomo-in-person-gaming-app/docs/api-specification/frontend-class-docs"},next:{title:"Frontend-Backend Integration",permalink:"/project-lomo-in-person-gaming-app/docs/api-specification/frontend-integration"}},o={},p=[{value:"Controller Classes",id:"controller-classes",level:2},{value:"UserController Class",id:"usercontroller-class",level:3},{value:"BeaconController Class",id:"beaconcontroller-class",level:3},{value:"GameController Class",id:"gamecontroller-class",level:3},{value:"Model Classes",id:"model-classes",level:2},{value:"User",id:"user",level:3},{value:"Profile",id:"profile",level:3},{value:"Beacon",id:"beacon",level:3},{value:"Events",id:"events",level:2},{value:"BeaconCreated Class",id:"beaconcreated-class",level:3},{value:"Form Request",id:"form-request",level:2},{value:"BeaconPostRequest Class",id:"beaconpostrequest-class",level:3},{value:"UserUpdateRequest Class",id:"userupdaterequest-class",level:3},{value:"ProfileUpdateRequest Class",id:"profileupdaterequest-class",level:3},{value:"Resources",id:"resources",level:2},{value:"BeaconJsonResponse Class",id:"beaconjsonresponse-class",level:3},{value:"Factories",id:"factories",level:2},{value:"UserFactory",id:"userfactory",level:3},{value:"BeaconFactory",id:"beaconfactory",level:3},{value:"ProfileFactory",id:"profilefactory",level:3},{value:"Migrations",id:"migrations",level:2},{value:"create_users_table",id:"create_users_table",level:3},{value:"create_beacons_table",id:"create_beacons_table",level:3},{value:"create_profiles_table",id:"create_profiles_table",level:3},{value:"create_attendees_table",id:"create_attendees_table",level:3},{value:"create_comments_table",id:"create_comments_table",level:3},{value:"add_avatar_to_users_table",id:"add_avatar_to_users_table",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backend-class-documentation"},"Backend Class Documentation"),(0,r.kt)("p",null,"Documentation for the Laravel backend classes."),(0,r.kt)("h2",{id:"controller-classes"},"Controller Classes"),(0,r.kt)("h3",{id:"usercontroller-class"},"UserController Class"),(0,r.kt)("p",null,"The purpose of this class is to handle HTTP requests pertaining to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/users")," route."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"index()")," method: Gets a list of all users from the database")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/users/"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"store()")," method: Creates a user in the database")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/users/{user}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: Request request"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"show(User $user)")," method: Gets user data from the database using their user_id")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/users/{user}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: User $user"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"update(User $user)")," method: Updates the user's data in the database")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-conditions:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"PUT /api/users/{user}"),(0,r.kt)("li",{parentName:"ul"},"PATCH /api/users/{user}"))),(0,r.kt)("li",{parentName:"ul"},"Parameters: User $user"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"delete(User $user)")," method: Deletes a user from the database using their user_id")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: DELETE /api/users/{user}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: User $user"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code")),(0,r.kt)("h3",{parentName:"li",id:"profilecontroller-class"},"ProfileController Class"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileController")," class is responsible for handling HTTP requests related to user profiles."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"index()")," method: Retrieve all profiles from the database."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/profiles/"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"show($userId)")," Method: Find and display the profile by user ID."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/profiles/{userId}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: int $userId"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"update(ProfileUpdateRequest $request, $userId)")," Method: Update the profile with the specified user ID."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: PUT /api/profiles/{userId}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: Request $request, int $userId"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"destroy($userId)")," Method: Delete the profile with the specified user ID."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: DELETE /api/profiles/{userId}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: int $userId"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"store(ProfileStoreRequest $request)")," Method: Create a new profile with the specified user ID."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/profiles/"),(0,r.kt)("li",{parentName:"ul"},"Parameters: Request $request"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code")))),(0,r.kt)("h3",{id:"beaconcontroller-class"},"BeaconController Class"),(0,r.kt)("p",null,"The purpose of this class is to handle data pertaining to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/beacons")," route."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"index()")," method: Gets a list of all beacons from the database"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/beacons/"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"store(BeaconPostRequest $request)")," method: Creates a beacon in the database"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/beacons/{beacon}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: BeaconPostRequest request"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"show(Beacon $beacon)")," method: Gets user beacon from the database using their beacon_id"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/beacons/{beacon}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: Beacon $beacon"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"update(Beacon $beacon)")," method: Updates the beacon's data in the database"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-conditions: ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"PUT /api/beacons/{beacon}"),(0,r.kt)("li",{parentName:"ul"},"PATCH /api/beacon/{beacon}"))),(0,r.kt)("li",{parentName:"ul"},"Parameters: Beacon $beacon"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"delete(Beacon $beacon)")," method: Deletes a beacon from the database using their beacon_id"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: DELETE /api/beacons/{beacon}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: Beacon $beacon"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"createsCoordinatesField(array $beaconArray)")," method: Combine the latitude and longitude fields into a single coordinates field for the database."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Parameters: array $beaconArray"),(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h3",{id:"gamecontroller-class"},"GameController Class"),(0,r.kt)("p",null,"The purpose of this class is to handle data pertaining to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/games")," route."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"getGamesByName(string $game_title)")," method: Gets game data by name using IGDB's API. Returned as an array of objects."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: GET /api/games/{game_title}"),(0,r.kt)("li",{parentName:"ul"},"Parameters: string $game_title"),(0,r.kt)("li",{parentName:"ul"},"Returns: JSON response with HTTP status code")))),(0,r.kt)("h2",{id:"model-classes"},"Model Classes"),(0,r.kt)("p",null,"Model classes are like object classes in Java. They define the object instance for a collection in the database. They follow a naming convention that allows Laravel to automatically connect to the correct database collection/table. The Model classes are singular and the database collection is plural."),(0,r.kt)("h3",{id:"user"},"User"),(0,r.kt)("p",null,"The User model class defines the object instance of a users document/row in Laravel. It contains a list of all the users collection fields."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"fillable"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that are mass assignable."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"hidden"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that should be hidden for serialization."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"casts"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that should be cast.")))),(0,r.kt)("h3",{id:"profile"},"Profile"),(0,r.kt)("p",null,"The Profile model class defines the object instance of a user's profile in Laravel. It contains a list of all the profile-related fields."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"fillable"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that are mass assignable."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"user_id"),": string"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The identifier linking the profile to a user."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"about_me"),": string"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A brief description or information about the user."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"preferred_games"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A brief description or information about the user."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"preference_tags"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A brief description or information about the user.")))),(0,r.kt)("h3",{id:"beacon"},"Beacon"),(0,r.kt)("p",null,"The Beacon model class defines the object instance of a beacons document/row in Laravel. It contains a list of all the beacons collection fields."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"fillable"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that are mass assignable."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"guarded"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that are protected against mass assignment"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"casts"),": array"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The attributes that should be cast.")))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"beaconcreated-class"},"BeaconCreated Class"),(0,r.kt)("p",null,"The purpose of this class is to send Beacon data through the websocket."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"public BeaconJsonResponse $beacon")," variable: Beacon data in json format.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"__construct(BeaconJsonResponse $beacon)")," method: Creates a new BeaconCreated instance."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: called with either the ",(0,r.kt)("inlineCode",{parentName:"li"},"event()")," method or the ",(0,r.kt)("inlineCode",{parentName:"li"},"broadcast()")," method"),(0,r.kt)("li",{parentName:"ul"},"Parameters: BeaconJsonResponse $beacon"),(0,r.kt)("li",{parentName:"ul"},"Returns: BeaconCreated instance"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"broadcastOn()")," method: Get the channels the event should broadcast on."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h2",{id:"form-request"},"Form Request"),(0,r.kt)("h3",{id:"beaconpostrequest-class"},"BeaconPostRequest Class"),(0,r.kt)("p",null,"The purpose of this class is to validate incoming data received through the POST ",(0,r.kt)("inlineCode",{parentName:"p"},"api/beacons")," route."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"authorize()")," method: Determine if the user is authorized to make this request."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/beacons/{beacon}"),(0,r.kt)("li",{parentName:"ul"},"Returns: bool"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"rules()")," method: Get the validation rules that apply to the request."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h3",{id:"userupdaterequest-class"},"UserUpdateRequest Class"),(0,r.kt)("p",null,"The UserUpdateRequest class is designed to validate incoming data received through the POST ",(0,r.kt)("inlineCode",{parentName:"p"},"api/users/{user}")," route, specifically for updating user information."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"authorize()")," method: Determine if the user is authorized to make this request."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/users/{user}"),(0,r.kt)("li",{parentName:"ul"},"Returns: bool"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"rules()")," method: Get the validation rules that apply to the request."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h3",{id:"profileupdaterequest-class"},"ProfileUpdateRequest Class"),(0,r.kt)("p",null,"The ProfileUpdateRequest class is designed to validate incoming data received through the POST ",(0,r.kt)("inlineCode",{parentName:"p"},"api/profiles/{user}")," route, specifically for updating profile information."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"authorize()")," method: Determine if the user is authorized to make this request.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/profiles/{user}"),(0,r.kt)("li",{parentName:"ul"},"Returns: bool"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"rules()")," method: Get the validation rules that apply to the request.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Returns: array"),(0,r.kt)("h3",{parentName:"li",id:"profilestorerequest-class"},"ProfileStoreRequest Class"),(0,r.kt)("p",{parentName:"li"},"The ProfileStoreRequest class is designed to validate incoming data received through the POST ",(0,r.kt)("inlineCode",{parentName:"p"},"api/profiles")," route, specifically for creating new profiles.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"authorize()")," method: Determine if the user is authorized to make this request.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: POST /api/profiles"),(0,r.kt)("li",{parentName:"ul"},"Returns: bool"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"rules()")," method: Get the validation rules that apply to the request.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("h3",{id:"beaconjsonresponse-class"},"BeaconJsonResponse Class"),(0,r.kt)("p",null,"The purpose of this class is to convert the data returned from the beacons table database into a json type. And to remove the coordinates field and split it into a latitude and longitude field."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"toArray(Request $request)")," method: Transform the resource into an array."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: new BeaconJsonResponse() is called"),(0,r.kt)("li",{parentName:"ul"},"Returns: array")))),(0,r.kt)("h2",{id:"factories"},"Factories"),(0,r.kt)("h3",{id:"userfactory"},"UserFactory"),(0,r.kt)("p",null,"The purpose of this class is to create an entry in the users table with fake data. Primarily used for testing."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"definition()")," method: Define the model's default state."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: ",(0,r.kt)("inlineCode",{parentName:"li"},"User::factory()")," method is called"),(0,r.kt)("li",{parentName:"ul"},"Returns: User instance")))),(0,r.kt)("h3",{id:"beaconfactory"},"BeaconFactory"),(0,r.kt)("p",null,"The purpose of this class is to create an entry in the beacons table with fake data. Primarily used for testing."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"definition()")," method: Define the model's default state."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: ",(0,r.kt)("inlineCode",{parentName:"li"},"Beacon::factory()")," method is called"),(0,r.kt)("li",{parentName:"ul"},"Returns: Beacon instance")))),(0,r.kt)("h3",{id:"profilefactory"},"ProfileFactory"),(0,r.kt)("p",null,"The purpose of this class is to creating an entry in the beacons table with fake data. It is primarily designed for testing scenarios."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"definition()")," method: Define the model's default state."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: ",(0,r.kt)("inlineCode",{parentName:"li"},"Profile::factory()")," method is called"),(0,r.kt)("li",{parentName:"ul"},"Returns: Profile instance")))),(0,r.kt)("h2",{id:"migrations"},"Migrations"),(0,r.kt)("h3",{id:"create_users_table"},"create_users_table"),(0,r.kt)("p",null,"The purpose of this class is to create a users table in the database from Laravel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))),(0,r.kt)("h3",{id:"create_beacons_table"},"create_beacons_table"),(0,r.kt)("p",null,"The purpose of this class is to create a beacons table in the database from Laravel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))),(0,r.kt)("h3",{id:"create_profiles_table"},"create_profiles_table"),(0,r.kt)("p",null,"The purpose of this class is to create a profiles table in the database from Laravel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))),(0,r.kt)("h3",{id:"create_attendees_table"},"create_attendees_table"),(0,r.kt)("p",null,"The purpose of this class is to create a attendees table in the database from Laravel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))),(0,r.kt)("h3",{id:"create_comments_table"},"create_comments_table"),(0,r.kt)("p",null,"The purpose of this class is to create a comments table in the database from Laravel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))),(0,r.kt)("h3",{id:"add_avatar_to_users_table"},"add_avatar_to_users_table"),(0,r.kt)("p",null,"The purpose of this class is to add the avatar in User table"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"run()")," method: Run the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, a table in the database"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"down()")," method: Reverse the migrations."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pre-condition: php artisan migrate commands are called"),(0,r.kt)("li",{parentName:"ul"},"Returns: null, table deleted from database")))))}d.isMDXComponent=!0}}]);