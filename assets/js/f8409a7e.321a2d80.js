"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(n),m=a,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:1},i="Introduction",s={unversionedId:"intro",id:"intro",title:"Introduction",description:"LOMO is a full-stack, mobile-first web app using ReactJS and Tailwind CSS for the frontend, Laravel Sail (dockerized version of Laravel) as the API backend, PostgreSQL as the database, and Docusaurus as the documentation site hosted on GitHub Pages.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/project-lomo-in-person-gaming-app/docs/intro",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-lomo-in-person-gaming-app/edit/main/documentation/docs/intro.mdx",tags:[],version:"current",lastUpdatedBy:"Jennifer Lieu",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Requirements Specification",permalink:"/project-lomo-in-person-gaming-app/docs/category/requirements-specification"}},c={},p=[],u={toc:p},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"LOMO is a full-stack, mobile-first web app using ",(0,a.kt)("strong",{parentName:"p"},"ReactJS and Tailwind CSS")," for the frontend, ",(0,a.kt)("strong",{parentName:"p"},"Laravel Sail")," (dockerized version of Laravel) as the API backend, ",(0,a.kt)("strong",{parentName:"p"},"PostgreSQL")," as the database, and ",(0,a.kt)("strong",{parentName:"p"},"Docusaurus")," as the documentation site hosted on ",(0,a.kt)("strong",{parentName:"p"},"GitHub Pages"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/#setup-instructions"},"Setup instructions and run instructions")," are on the ",(0,a.kt)("a",{parentName:"p",href:"/"},"main page of this Docusaurus"),"."),(0,a.kt)("p",null,"For resources and guides, check out the ",(0,a.kt)("a",{parentName:"p",href:"/resources/intro"},"resources")," page."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requirement Specifications:")," "),(0,a.kt)("p",null,"High level overview about LOMO, how the tech stack is connected together (system block diagram), requirements, features, and use cases of the app."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Software Development Plan:")),(0,a.kt)("p",null,"Describes the development environment and the tools needed to develop the app."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"System Architecture:")),(0,a.kt)("p",null,"High level overview of the class diagrams for frontend and backend, database diagrams, sequence diagrams for each use cases, and some inital design mockups."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"API Specification:")),(0,a.kt)("p",null,"API documentation is about how to use the backend Laravel classes and frontend React components, methods, and functions, their parameters and return values, etc. It also documents the backend API endpoints and the frontend API integration and connectivity to the backend."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Test Procedures:")),(0,a.kt)("p",null,"Documentation for the unit tests for both the frontend and backend, integration tests, and acceptance tests."))}d.isMDXComponent=!0}}]);