"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5201],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},10569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:4},i="Docker Quick Start",l={unversionedId:"docker-quick-start",id:"docker-quick-start",title:"Docker Quick Start",description:"Docker concepts",source:"@site/resources/docker-quick-start.md",sourceDirName:".",slug:"/docker-quick-start",permalink:"/project-lomo-in-person-gaming-app/resources/docker-quick-start",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"React API calls and State",permalink:"/project-lomo-in-person-gaming-app/resources/react-api-calls-and-state"},next:{title:"Docusaurus Quick Start",permalink:"/project-lomo-in-person-gaming-app/resources/category/docusaurus-quick-start"}},c={},s=[{value:"Docker concepts",id:"docker-concepts",level:2},{value:"Start/stop container",id:"startstop-container",level:2},{value:"Show a list of containers",id:"show-a-list-of-containers",level:2},{value:"Get container id",id:"get-container-id",level:2},{value:"Get container name",id:"get-container-name",level:2},{value:"Access the docker container&#39;s command line",id:"access-the-docker-containers-command-line",level:2},{value:"From Docker Desktop",id:"from-docker-desktop",level:3},{value:"From Command line",id:"from-command-line",level:3}],p={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker-quick-start"},"Docker Quick Start"),(0,r.kt)("h2",{id:"docker-concepts"},"Docker concepts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A docker container is kind of a virtual machine except it only runs a lightweight command line version of Linux and uses the host computer's resources to function. It's supposed to be lightweight."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"docker compose")," command is the equivalent of a makefile in C",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"You can use docker run to start a container with literally multiple lines of options OR put all of those options in a docker-compose.yml file and run ",(0,r.kt)("inlineCode",{parentName:"li"},"docker compose up")," instead."))),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," file describes how the docker container is built.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It can bundle docker images together ")))),(0,r.kt)("h2",{id:"startstop-container"},"Start/stop container"),(0,r.kt)("p",null,"You can either use Docker Desktop's Dashboard or the command line. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Docker Desktop:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Go to the \"containers\" tab, click the start/stop button next to the container called 'backend' or 'laravel.test-1'"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Command line:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# start container\nsail up -d\ndocker compose up -d\n\n# stop container\nsail down\ndocker compose down\n")))),(0,r.kt)("h2",{id:"show-a-list-of-containers"},"Show a list of containers"),(0,r.kt)("p",null,"You can either use Docker Desktop's Dashboard or the command line."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Docker Desktop:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Go to the "container" tab to see a list of all containers, both running and stopped'))),(0,r.kt)("li",{parentName:"ul"},"Command line:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Show active containers only: ",(0,r.kt)("inlineCode",{parentName:"li"},"docker ps")),(0,r.kt)("li",{parentName:"ul"},"Show ALL containers, both active and inactive: ",(0,r.kt)("inlineCode",{parentName:"li"},"docker ps -a"))))),(0,r.kt)("h2",{id:"get-container-id"},"Get container id"),(0,r.kt)("p",null,"You can either use Docker Desktop's Dashboard or the command line."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Docker Desktop",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Go to the "container" tab.'),(0,r.kt)("li",{parentName:"ul"},"Find backend > laravel.test-1 container"),(0,r.kt)("li",{parentName:"ul"},"Underneath the container title is a string of characters like ",(0,r.kt)("inlineCode",{parentName:"li"},"47e98223b7bf"),". That's the container id."),(0,r.kt)("li",{parentName:"ul"},"Copy the container id"))),(0,r.kt)("li",{parentName:"ul"},"Command line",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"docker ps -a")," to show all containers"),(0,r.kt)("li",{parentName:"ul"},"Find the container id and copy it")))),(0,r.kt)("h2",{id:"get-container-name"},"Get container name"),(0,r.kt)("p",null,"Easiest and surest way is to use the command line"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"docker ps -a")," to show all the containers"),(0,r.kt)("li",{parentName:"ol"},"Find the container name and copy it")),(0,r.kt)("h2",{id:"access-the-docker-containers-command-line"},"Access the docker container's command line"),(0,r.kt)("p",null,"You can either use Docker Desktop's Dashboard or the command line."),(0,r.kt)("h3",{id:"from-docker-desktop"},"From Docker Desktop"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Go to the "containers" tab'),(0,r.kt)("li",{parentName:"ol"},"Make sure that the laravel container is RUNNING"),(0,r.kt)("li",{parentName:"ol"},"Click into the laravel container"),(0,r.kt)("li",{parentName:"ol"},'Click the "terminal" tab (for mac users) or the "exec" tab (for windows users)'),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"bash")," to change the shell to bash"),(0,r.kt)("li",{parentName:"ol"},"Start running commands as if it's your local machine. Meaning, don't use ",(0,r.kt)("inlineCode",{parentName:"li"},"sail")," commands or docker commands, just use the original commands",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Example: run ",(0,r.kt)("inlineCode",{parentName:"li"},"php --version")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"sail php --verion")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"docker exec -it <container-id/name> php --version"))))),(0,r.kt)("h3",{id:"from-command-line"},"From Command line"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"docker exec -it <container-id/name> bash")," to enter the command line inside the docker container",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"-it")," means interactive"))),(0,r.kt)("li",{parentName:"ol"},"Start running commands as if it's your local machine. Meaning, don't use ",(0,r.kt)("inlineCode",{parentName:"li"},"sail")," commands or docker commands, just use the original commands",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Example: run ",(0,r.kt)("inlineCode",{parentName:"li"},"php --version")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"sail php --verion")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"docker exec -it <container-id/name> php --version"))))))}u.isMDXComponent=!0}}]);