"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[9692],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),d=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(a),l=r,g=m["".concat(u,".").concat(l)]||m[l]||p[l]||i;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=l;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}l.displayName="MDXCreateElement"},48682:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:4,description:"Database Diagram"},o="Database Diagram",s={unversionedId:"system-architecture/erddiagrams",id:"system-architecture/erddiagrams",title:"Database Diagram",description:"Database Diagram",source:"@site/docs/system-architecture/erddiagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/erddiagrams",permalink:"/project-lomo-in-person-gaming-app/docs/system-architecture/erddiagrams",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-lomo-in-person-gaming-app/edit/main/documentation/docs/system-architecture/erddiagrams.md",tags:[],version:"current",lastUpdatedBy:"JonathanAltenburg",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Database Diagram"},sidebar:"docsSidebar",previous:{title:"Sequence Diagrams",permalink:"/project-lomo-in-person-gaming-app/docs/system-architecture/sequencediagrams"},next:{title:"API Specification",permalink:"/project-lomo-in-person-gaming-app/docs/category/api-specification"}},u={},d=[{value:"Figure 1. Database Entity-Relation-Diagram",id:"figure-1-database-entity-relation-diagram",level:4}],c={toc:d},m="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"database-diagram"},"Database Diagram"),(0,r.kt)("mermaid",{value:'---\ntitle: Database Entity-Relationship-Diagram vers. omega-0.0.2\n---\nerDiagram\n    users { \n        uuid id PK\n        text email UK\n        text username UK\n        text password\n        text avatar\n    }\n\n    users ||--|| profiles : "have only one"\n    profiles {\n        uuid id PK\n        uuid user_id FK\n        text about_me\n        array preferred_games\n        array preferred_tags\n    }\n\n    users ||--o{ friends : "have many"\n    friends {\n        uuid id PK\n        uuid user_id FK\n        uuid friend_id FK\n    }\n    \n    users ||--o{ beacons : "host many"\n    beacons {\n        uuid id PK\n        uuid host_id FK\n        text title\n        text game_title\n        text game_system\n        text description\n        timestamp start_date_time\n        timestamp end_date_time\n        text address\n        geography coordinates\n        int players_needed\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    users ||--o{ comments : "create many"\n    beacons ||--o{ comments : "have many"\n    comments {\n        uuid id PK\n        uuid user_id FK\n        uuid beacon_id FK\n        text body\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    beacons ||--o{ attendees : "have many"\n    attendees {\n        uuid id PK\n        uuid beacon_id FK\n        uuid user_id FK\n    }\n\n    users ||--o{ reports : "have against them many"\n    reports {\n        uuid id PK\n        uuid user_id FK\n        uuid reported_id FK\n        text body\n        timestamp created_at\n        timestamp updated_at\n    }'}),(0,r.kt)("h4",{id:"figure-1-database-entity-relation-diagram"},"Figure 1. Database Entity-Relation-Diagram"),(0,r.kt)("p",null,"The app uses PostgreSQL as the database for its for its geospatial abilities that make it easier to query nearby locations using latitude and longitude coordinates."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"users table")," contains basic account information about the user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"profiles table")," contains more information about the user for their profile page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"friends table")," is a relationship table that maps a one to one relationship between users when they befriend each other"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"beacons table")," contains all information about the beacon"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"comments table")," contains a list of all comments made"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"attendees table")," is a relationship that maps a one to one relationship between a user and the beacon event that they attended as a guest, not as a host"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"reports table")," contains information about a report made by a user against another user (the reported user)")))}p.isMDXComponent=!0}}]);